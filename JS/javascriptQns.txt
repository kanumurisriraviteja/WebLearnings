https://www.w3schools.com/js/default.asp
1. Difference between var,let,const.
  var is functional scope
  let, const are both BLOCK scope
  const, cannot be reassigned, however it is mutable
  Variables and constants declared with let or const are not hoisted!
2.<noscript></noscript> this would be executed when javascript is disabled.
tsc <filename> transpiling converting ts file to js file. 
node <filename.js> runs the js file at the server.
for in loops over enumerable property names of an object.
for of (new in ES6) does use an object-specific iterator and loops over the values generated by that.

Techsith : https://www.youtube.com/watch?v=oxoFVqetl1E&list=PL7pEw9n3GkoWn5TcqAdmSzXcvC3d_tfAh
Kud venkat JS 57. public, private functions variables.
Namespaces:  https://javascriptweblog.wordpress.com/2010/12/07/namespacing-in-javascript/
Object accesors:  https://www.w3schools.com/js/js_object_accessors.asp 

class foo {
    private _bar: boolean = false;
    
    get bar(): boolean {
        return this._bar;
    }
    set bar(value: boolean) {
        this._bar = value;
    }
}

class GenericNumber<T> {
    zeroValue: T;
    add: (x: T, y: T) => T;
}

let myGenericNumber = new GenericNumber<number>();
myGenericNumber.zeroValue = 0;
myGenericNumber.add = function(x, y) { return x + y; };

> The <script> tag can be added into <head> or <body> tag.The script included into <head> tag may not be able to access DOM elements because <head> loads before <body>.
 Write script before ending of </body> tag if script code needs to access DOM elements.



 Q) difference between call and apply,
>   var person = {
  fullName: function(city, country) {
    return this.firstName + " " + this.lastName + "," + city + "," + country;
  }
}
var person1 = {
  firstName:"John",
  lastName: "Doe"
}
person.fullName.call(person1, "Oslo", "Norway");

where as in the apply() we send in the form of an array